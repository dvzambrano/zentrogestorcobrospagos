<?php

/**
 * TransactionTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TransactionTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object TransactionTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Transaction');
    }

    private static function formatData($array, $page, $count = false) {
        $rows = array();

        $pos = 0;
        $balance = 0;
        foreach ($array as $row) {
            if ($row->getCredit() != $row->getDebit()) {
                $rows[] = $row->toArray();
                $rows[$pos]['creationdate'] = str_replace("-", "/", $row->getCreationdate());
                $rows[$pos]['person'] = $row->getPerson()->getSfGuardUser()->getFirstName() . ' ' . $row->getPerson()->getSfGuardUser()->getLastName();

                $balance += ($row->getCredit() - $row->getDebit());
                if ($row->getDebit() > 0) {
                    $rows[$pos]['balancedebit'] = $row->getDebit();
                } else {
                    $rows[$pos]['balancecredit'] = $row->getCredit();
                }
                $rows[$pos]['balance'] = round($balance, 2);
                
                $rows[$pos]['annexes'] = $row->getRegannexs()->toArray();
                for ($index = 0; $index < count($rows[$pos]['annexes']); $index++) {
                    $annexes = $row->getRegannexs();
                    $rows[$pos]['annexes'][$index]['element'] = $annexes[$index]->getElement()->getName();
                }

                $pos++;
            }
        }

        $rows = array(
            'metaData' => array(
                'idProperty' => 'code',
                'root' => 'data',
                'totalProperty' => 'results',
                'fields' => array(
                    array('name' => 'id', 'type' => 'int'),
                    array('name' => 'creationdate', 'type' => 'date'),
                    array('name' => 'debit', 'type' => 'decimal'),
                    array('name' => 'credit', 'type' => 'decimal'),
                    array('name' => 'total', 'type' => 'decimal'),
                    array('name' => 'balancedebit', 'type' => 'float'),
                    array('name' => 'balancecredit', 'type' => 'float'),
                    array('name' => 'balance', 'type' => 'float'),
                    array('name' => 'comment', 'type' => 'string'),
                    array('name' => 'person_id', 'type' => 'int'),
                    array('name' => 'person', 'type' => 'decimal'),
                    array('name' => 'annexes')
                ),
                'sortInfo' => array(
                    'field' => 'id',
                    'direction' => 'ASC'
                )
            ),
            'success' => true,
            'message' => 'app.msg.info.loadedsuccessful',
            'results' => $count ? $count : Doctrine_Query::create()->from(self::table . ' b')->count(),
            'data' => $rows,
            'page' => $page
        );
        return $rows;
    }

    const table = 'Transaction';
    const akfield = 'id';

    public static function getAllPaged($start, $limit, $query, $filters) {
//        if ($query) {
//            $filters = array();
//
//            $obj = new stdClass();
//            $obj->type = 'int';
//            $obj->field = 'reservation_id';
//            $obj->value = $query;
//            $filters[] = $obj;
//        }

        $query = BaseTable::getAllPaged(self::table, $start, $limit, $filters);
        return self::formatData($query['results'], $query['page']);
    }

    public static function findByAK($ak) {
        return BaseTable::findByAK(self::table, self::akfield, $ak);
    }

    public static function getAll() {
        return self::formatData(BaseTable::getAll(self::table), 1);
    }

    public static function deleteByPK($pks) {
        return BaseTable::deleteByPK(self::getInstance(), $pks);
    }

}